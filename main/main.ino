#include <Servo.h>
Servo myServo;

const int stepPin = 3;
const int dirPin = 4;
const int servo_pin = 9;

const int return_steps = 2;
const int nail_count = 200;  
const int ratio=400/nail_count;

int nail_list[] = {16,171,8,182,199,171,14,167,1,179,13,168,149,132,155,129,144,122,156,127,105,86,71,93,78,63,95,124,151,167,15,177,6,189,173,13,182,197,12,187,160,144,114,85,107,123,82,66,94,132,116,151,136,109,84,64,98,132,110,144,165,7,188,11,174,7,163,3,178,14,172,194,18,170,15,166,142,115,79,120,96,65,106,138,100,63,102,87,128,151,118,154,134,118,74,93,67,86,129,150,175,10,181,0,169,16,166,2,179,10,168,17,176,156,124,88,127,94,65,101,118,147,111,83,68,99,120,146,163,11,171,197,161,4,189,157,126,81,112,68,105,139,154,116,75,101,62,96,123,142,104,140,124,78,121,152,115,82,99,63,87,66,100,119,153,177,16,163,10,189,168,1,164,9,169,186,13,162,12,179,194,164,3,165,18,175,157,131,150,119,74,109,145,164,15,181,5,160,132,90,125,84,129,98,69,94,134,149,113,72,117,155,177,19,174,158,188,18,167,23,170,199,184,14,168,143,120,93,70,87,104,64,105,81,124,91,76,121,145,108,66,95,131,101,137,107,67,189,156,191,6,175,193,10,172,196,162,36,161,34,49,32,51,174,17,179,152,114,80,126,154,133,92,75,107,144,112,73,0,180,16,168,23,175,4,158,128,146,113,95,64,102,117,78,106,124,157,172,18,164,41,163,37,161,14,185,9,190,68,110,148,133,95,68,171,45,164,11,180,24,173,8,168,24,172,47,166,18,178,16,175,47,163,138,115,71,1,70,184,66,187,8,165,44,162,34,150,112,86,130,158,34,160,39,164,27,165,17,167,11,168,65,98,137,97,60,96,111,67,186,9,181,14,179,67,172,44,160,141,102,62,88,69,114,72,92,123,151,127,83,65,186,70,194,174,67,168,68,198,73,110,70,94,135,117,153,120,149,34,143,37,152,34,50,175,21,166,14,175,2,167,68,185,65,169,44,157,35,162,42,159,134,104,82,124,85,121,77,118,155,116,79,105,70,179,48,33,144,35,138,37,142,127,99,62,103,142,35,161,17,190,7,75,197,168,18,163,38,151,113,88,129,102,73,194,9,182,71,116,136,162,22,176,191,14,170,16,173,23,166,69,182,14,176,68,196,13,185,71,177,46,161,139,99,76,122,151,33,155,125,149,39,144,34,133,91,129,145,33,54,31,52,171,64,161,65,180,68,169,24,175,64,170,67,197,72,0,168,66,188,22,178,15,159,121,95,80,115,154,119,78,98,59,32,145,169,17,164,28,166,68,165,43,177,23,187,67,167,40,85,129,93,108,74,5,183,19,166,42,140,33,158,45,156,47,160,37,135,34,139,104,128,82,36,137,40,141,104,89,132,35,83,114,145,34,155,138,34,142,38,82,42,173,14,194,169,66,109,71,174,66,192,70,113,147,33,150,117,8,160,40,135,100,67,190,71,171,24,170,6,106,76,11,178,19,171,48,164,68,89,126,147,162,63,97,119,73,184,24,167,66,193,178,65,187,51,36,143,33,157,46,139,44,164,21,193,16,172,43,86,108,146,127,110,137,38,134,36,150,124,77,123,79,97,58,33,153,122,161,22,189,72,181,199,23,163,27,131,89,61,101,189,75,120,89,111,68,163,66,182,7,173,66,165,28,61,94,122,158,44,137,35,130,90,110,67,177,13,195,70,165,16,176,24,174,87,178,5,70,173,18,180,10,76,107,68,173,46,154,33,148,40,174,151,111,126,79,34,53,26,125,105,7,186,66,175,85,2,104,71,169,47,171,23,178,49,156,33,152,123,83,172,70,115,143,35,141,41,139,109,147,34,151,40,142,157,117,154,114,84,41,146,34,136,99,77,115,136,45,141,166,30,55,25,62,79,184,16,167,80,187,2,69,193,44,81,170,19,168,39,162,68,174,15,171,50,162,27,130,37,83,4,184,23,181,67,184,92,128,145,106,69,165,22,174,12,185,66,191,97,135,35,52,186,11,107,64,179,76,186,3,84,122,62,32,80,125,160,33,159,63,121,86,172,23,162,124,13,178,67,166,71,99,114,86,175,44,138,47,141,34,153,118,7,87,72,171,18,162,43,159,140,48,148,34,129,82,116,5,105,137,161,68,177,14,174,65,176,196,67,171,84,170,68,109,91,185,67,34,140,101,193,23,169,70,102,197,48,191,67,183,49,163,28,167,71,164,23,56,94,73,118,76,9,72,115,83,174,45,142,122,137,33,149,165,143,39,141,107,133,35,145,37,136,95,15,172,82,125,148,171,186,23,59,115,195,67,173,71,184,39,133,88,177,7,55,40,79,45,135,93,8,106,144,36,163,71,170,22,62,121,160,120,74,183,23,179,5,21,167,50,155,131,36,138,3,103,65,177,74,99,180,42,65,182,16,1,105,120,63,156,34,159,126,26,137,45,86,0,20,175,199,101,68,113,154,34,163,43,141,33,146,30,60,100,133,42,145,39,82,169,85,6,120,88,181,196,111,149,31,167,7,73,91,53,178,151,35,66,189,16,164,67,92,107,73,162,67,169,76,115,153,126,27,62,118,9,140,45,179,16,162,45,60,121,138,93,115,56,17,172,66,190,5,87,172,20,97,133,45,153,121,82,33,175,67,188,101,186,44,141,37,150,135,39,139,35,147,172,13,184,102,192,82,118,92,3,185,81,127,158,5,174,49,139,2,113,90,134,40,81,64,129,62,37,146,35,150,30,171,81,167,29,165,82,184,15,168,69,160,124,40,113,57,16,181,40,138,160,50,90,66,170,25,125,78,42,164,73,199,70,111,84,38,136,198,155,51,164,79,182,21,168,71,108,129,26,124,42,61,76,12,192,96,129,81,123,14,142,33,68,184,164,63,104,143,158,48,141,38,64,178,24,166,182,10,87,130,63,118,11,142,36,95,177,24,192,113,98,83,171,44,182,68,0,100,72,118,158,63,14,169,152,119,58,39,165,47,136,41,125,95,193,81,166,22,3,50,173,64,155,128,23,174,16,62,123,162,74,117,4,182,103,196,73,176,42,132,150,31,146,38,138,98,19,62,120,14,137,39,161,33,101,124,141,46,77,13,181,11,196,156,118,89,174,8,184,93,136,69,170,65,80,168,37,139,48,135,95,16,141,36,178,99,64,101,198,180,21,55,177,78,158,41,133,85,120,151,26,75,174,33,95,65,14,110,94,13,88,48,160,16,122,82,197,110,66,177,86,182,154,112,37,148,122,7,161,45,129,41,178,44,29,166,17,171,149,36,84,8,72,167,75,91,5,140,156,116,194,66,133,102,121,9,24,114,196,89,18,1,186,53,174,28,13,180,165,30,152,130,103,1,139,6,187,73,189,80,42,137,68,172,90,129,162,80,45,146,32,142,41,66,26,178,28,168,70,109,22,195,90,182,82,126,92,137,153,35,160,65,37,133,49,137,37,95,114,56,120,104,62,127,80,36,151,170,21,161,134,39,106,62,111,34,157,37,144,31,16,60,43,64,177,12,181,19,176,161,76,100,34,82,4,93,133,189,89,175,13,109,42,141,50,180,74,171,20,113,0,78,37,121,155,35,148,126,15,62,116,70,85,168,22,167,79,160,54,18,100,82,63,101,150,44,134,70,2,157,136,43,194,15,143,38,144,46,129,27,139,102,187,19,172,25,147,36,21,142,47,131,86,7,185,74,161,23,165,193,71,153,114,195,73,168,31,152,35,164,29,127,82,112,41,137,0,176,67,165,73,172,7,181,99,146,131,191,113,128,28,186,69,95,129,48,100,118,55,115,6,176,97,64,167,142,39,56,178,20,62,125,39,140,74,95,132,45,159,35,149,119,75,160,145,36,66,96,194,68,25,137,43,164,26,116,92,192,177,70,189,68,160,77,156,184,11,62,100,125,86,110,41,138,39,61,34,101,180,19,165,14,146,76,112,45,149,37,162,53,192,85,185,10,108,23,68,135,42,127,161,121,75,113,81,128,149,30,142,63,160,31,145,40,21,171,69,174,150,179,164,22,169,12,172,71,189,65,121,0,69,135,46,137,50,101,78,118,152,26,154,35,140,37,147,130,62,128,98,196,19,184,168,29,185,0,103,88,138,11,173,93,76,8,157,32,150,28,172,69,3,188,5,88,176,64,45,139,40,143,190,114,70,107,7,192,155,72,165,146,39,23,180,15,89,133,105,138,71,176,46,133,84,166,63,47,129,37,151,32,67,194,144,41,97,142,43,115,49,140,168,153,36,139,68,45,107,0,70,163,35,178,54,190,90,119,62,124,108,142,42,27,161,44,87,120,17,147,29,153,32,15,123,76,163,22,177,60,22,185,170,9,105,72,121,136,86,127,68,175,19,179,66,34,94,173,148,36,146,40,129,44,133,70,171,25,169,75,143,42,136,40,184,105,90,170,29,177,76,198,183,65,129,49,89,124,163,140,113,73,170,20,173,65,50,35,156,117,81,168,75,147,39,163,14,199,154,132,50,87,179,9,62,117,199,55,174,88,134,43,135,1,182,80,118,141,7,139,38,145,41,104,53,133,48,137,47,85,104,123,64,174,9,95,38,148,32,149,164,30,151,134,98,79,63,84,186,99,19,190,43,26,162,178,21,165,24,124,41,82,44,111,63,155,130,89,127,103,192,16,110,83,155,170,17,180,53,191,69,189,79,1,101,116,48,182,6,87,136,39,18,68,114,63,129,38,149,100,198,137,34,166,12,182,73,101,127,27,146,69,112,12,75,171,150,29,156,32,171,92,77,143,126,45,138,43,145,47,134,45,78,148,30,131,106,121,8,178,17,40,140,36,152,18,197,84,182,167,19,164,69,44,59,119,77,11,194,154,36,136,49,128,143,45,145,10,123,66,81,177,69,173,19,37,74,122,77,159,16,85,127,14,42,139,33,111,46,61,174,147,32,141,95,139,164,24,141,185,77,120,57,176,23,149,42,121,91,20,36,157,173,195,66,161,70,138,46,106,87,116,195,179,15,0,110,189,9,168,83,39,172,22,160,73,42,146,124,58,189,77,107,14,193,93,52,68,188,88,131,62,21,162,125,157,76,142,31,153,37,156,26,163,63,10,167,69,84,140,47,100,139,88,71,102,181,150,38,147,40,161,1,68,179,101,135,44,144,169,69,113,44,131,114,43,71,198,17,173,188,21,169,29,14,180,8,87,11,120,41,169,83,167,30,147,31,158,35,18,191,91,117,40,144,92,111,136,98,177,25,173,32,143,48,66,171,156,141,63,106,4,70,112,42,138,32,154,169,80,51,133,118,52,131,48,96,81,2,182,5,73,137,4,116,57,36,164,65,19,169,74,102,19,162,142,44,136,33,119,82,195,95,112,135,38,162,71,56,181,65,124,63,168,145,76,197,97,122,63,153,133,47,32,144,198,176,109,94,194,41,143,107,166,148,26,150,40,171,28,175,25,179,100,140,38,153,26,41,135,47,123,40,83,131,87,43,65,12,165,76,158,22,37,53,0,162,81,134,69,185,4,172,72,109,69,179,65,188,138,111,55,190,44,64,181,103,119,71,158,184,166,35,16,136,46,134,42,196,136,68,119,88,175,96,189,18,177,21,143,23,100,80,2,145,125,79,94,115,194,177,17,181,70,170,30,144,161,120,139,101,197,88,166,75,90,32,152,39,94,128,48,130,51};
//0 8 16 24 16 24 32
int angle_up = 95-10;                              //need to be measured
int angle_down = 85-10;

void setup() {
  pinMode(stepPin,OUTPUT); 
  pinMode(dirPin,OUTPUT);
  myServo.attach(servo_pin);
}

void moveSteps(int steps, bool clockwise) {
  digitalWrite(dirPin, clockwise ? HIGH : LOW);
  int ramp_steps = min(steps / 4, 50); // 起步與減速各佔步數的 1/4，最多 50 步
  int cruise_steps = steps - ramp_steps * 2;
  
  for (int i = 0; i < steps; i++) {
    int delay_us;
    
    // Acceleration phase
    if (i < ramp_steps) {
      delay_us = 2000 - (i * (1000 / ramp_steps));  // 從2000遞減到1000
    }
    // Deceleration phase
    else if (i >= (ramp_steps + cruise_steps)) {
      delay_us = 1000 + ((i - ramp_steps - cruise_steps) * (1000 / ramp_steps)); // 從1000增加到2000
    }
    // Constant speed
    else {
      delay_us = 1000;
    }

    if(steps==return_steps) delay_us = 2000;


    digitalWrite(stepPin, HIGH);
    delayMicroseconds(delay_us);
    digitalWrite(stepPin, LOW);
    delayMicroseconds(delay_us);
  }
}

void walk(int distance, bool clockwise) {
  moveSteps(return_steps, !clockwise);
  delay(500);
  myServo.write(angle_up);
  delay(500);

  moveSteps(distance, clockwise);
  delay(500); 
  myServo.write(angle_down);    
  delay(500);

  
}

void loop() {
  myServo.write(angle_up);
  delay(3000);
  int last_clockwise = 1; //1=clockwise, 0=counter
  int num = sizeof(nail_list) / sizeof(nail_list[0])-1;
  for(int i=0; i<num; i++){
    int distance =((nail_list[i+1] - nail_list[i]+nail_count)%nail_count)*ratio;
    if (distance<200){
      if(last_clockwise) walk(distance+1*ratio,1);
      if(!last_clockwise) walk(distance-1*ratio,1);
      last_clockwise = 1;
    }else{
      distance = 400 - distance;
      if(last_clockwise) walk(distance-1*ratio,0);
      if(!last_clockwise) walk(distance+1*ratio,0);
      last_clockwise = 0;
    }
  }
  delay(10000);
  while(1);
}





